
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gapclosing"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gapclosing')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("as.data.frame.gapclosing")
> ### * as.data.frame.gapclosing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.data.frame.gapclosing
> ### Title: Coerce to a Data Frame
> ### Aliases: as.data.frame.gapclosing
> 
> ### ** Examples
> 
> # Simulate example data
> simulated_data <- generate_simulated_data(n = 100)
> 
> # Fit by outcome modeling
> estimate <- gapclosing(
+   data = simulated_data,
+   outcome_formula = formula(outcome ~ treatment * category + confounder),
+   treatment_name = "treatment",
+   category_name = "category",
+   counterfactual_assignments = 1
+ )
> summary(estimate)
Gap-closing estimates using outcome_modeling estimation on one sample.

Outcome model was lm estimation with model formula:
formula(outcome ~ treatment * category + confounder)

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.215
2 B          -0.261
3 C           0.602

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      0.0462
2 A - C     -0.817 
3 B - A     -0.0462
4 B - C     -0.863 
5 C - A      0.817 
6 C - B      0.863 

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B     -0.973 
2 A - C     -1.01  
3 B - A      0.973 
4 B - C     -0.0416
5 C - A      1.01  
6 C - B      0.0416

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      1.05  
2 A - C      0.554 
3 B - A      1.05  
4 B - C      0.0460
5 C - A      0.554 
6 C - B      0.0460

Type plot(name_of_this_object) to visualize results.
> 
> # Convert to a data frame
> estimate.df <- as.data.frame(estimate)
> 
> 
> 
> cleanEx()
> nameEx("df_to_gapclosing_list")
> ### * df_to_gapclosing_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: df_to_gapclosing_list
> ### Title: Convert Back to Canonical List Output
> ### Aliases: df_to_gapclosing_list
> 
> ### ** Examples
> 
> # Simulate example data
> simulated_data <- generate_simulated_data(n = 100)
> 
> # Fit by outcome modeling
> estimate <- gapclosing(
+   data = simulated_data,
+   outcome_formula = formula(outcome ~ treatment * category + confounder),
+   treatment_name = "treatment",
+   category_name = "category",
+   counterfactual_assignments = 1
+ )
> summary(estimate)
Gap-closing estimates using outcome_modeling estimation on one sample.

Outcome model was lm estimation with model formula:
formula(outcome ~ treatment * category + confounder)

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.215
2 B          -0.261
3 C           0.602

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      0.0462
2 A - C     -0.817 
3 B - A     -0.0462
4 B - C     -0.863 
5 C - A      0.817 
6 C - B      0.863 

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B     -0.973 
2 A - C     -1.01  
3 B - A      0.973 
4 B - C     -0.0416
5 C - A      1.01  
6 C - B      0.0416

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      1.05  
2 A - C      0.554 
3 B - A      1.05  
4 B - C      0.0460
5 C - A      0.554 
6 C - B      0.0460

Type plot(name_of_this_object) to visualize results.
> 
> # Convert to a data frame
> estimate.df <- as.data.frame(estimate)
> # Convert back to a list
> estimate.df <- df_to_gapclosing_list(estimate.df)
> 
> 
> 
> cleanEx()
> nameEx("gapclosing")
> ### * gapclosing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gapclosing
> ### Title: Gap closing estimator
> ### Aliases: gapclosing
> 
> ### ** Examples
> 
> # Simulate example data
> simulated_data <- generate_simulated_data(n = 100)
> 
> # Fit by outcome modeling
> # You can add standard errors with se = T
> estimate <- gapclosing(
+   data = simulated_data,
+   outcome_formula = outcome ~ treatment * category + confounder,
+   treatment_name = "treatment",
+   category_name = "category",
+   counterfactual_assignments = 1
+ )
> summary(estimate)
Gap-closing estimates using outcome_modeling estimation on one sample.

Outcome model was lm estimation with model formula:
outcome ~ treatment * category + confounder

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.215
2 B          -0.261
3 C           0.602

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      0.0462
2 A - C     -0.817 
3 B - A     -0.0462
4 B - C     -0.863 
5 C - A      0.817 
6 C - B      0.863 

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B     -0.973 
2 A - C     -1.01  
3 B - A      0.973 
4 B - C     -0.0416
5 C - A      1.01  
6 C - B      0.0416

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      1.05  
2 A - C      0.554 
3 B - A      1.05  
4 B - C      0.0460
5 C - A      0.554 
6 C - B      0.0460

Type plot(name_of_this_object) to visualize results.
> 
> # Fit by treatment modeling
> # You can add standard errors with se = T
> estimate <- gapclosing(
+   data = simulated_data,
+   treatment_formula = treatment ~ category + confounder,
+   outcome_name = "outcome",
+   category_name = "category",
+   counterfactual_assignments = 1
+ )
> summary(estimate)
Gap-closing estimates using treatment_modeling estimation on one sample.

Treatment model was glm estimation with model formula:
treatment ~ category + confounder

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.564
2 B          -0.104
3 C           0.562

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.460
2 A - C      -1.13 
3 B - A       0.460
4 B - C      -0.666
5 C - A       1.13 
6 C - B       0.666

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.467
2 A - C      -0.706
3 B - A       0.467
4 B - C      -0.239
5 C - A       0.706
6 C - B       0.239

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B       0.504
2 A - C       0.385
3 B - A       0.504
4 B - C       0.264
5 C - A       0.385
6 C - B       0.264

Type plot(name_of_this_object) to visualize results.
> 
> # Fit by doubly-robust estimation
> # You can add standard errors with se = T
> estimate <- gapclosing(
+   data = simulated_data,
+   outcome_formula = outcome ~ treatment * category + confounder,
+   treatment_formula = treatment ~ category + confounder,
+   category_name = "category",
+   counterfactual_assignments = 1
+ )
> summary(estimate)
Gap-closing estimates using doubly_robust estimation on one sample.

Treatment model was glm estimation with model formula:
treatment ~ category + confounder

Outcome model was lm estimation with model formula:
outcome ~ treatment * category + confounder

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.447
2 B          -0.289
3 C           0.596

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.157
2 A - C      -1.04 
3 B - A       0.157
4 B - C      -0.885
5 C - A       1.04 
6 C - B       0.885

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B     -0.769 
2 A - C     -0.789 
3 B - A      0.769 
4 B - C     -0.0199
5 C - A      0.789 
6 C - B      0.0199

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      0.830 
2 A - C      0.431 
3 B - A      0.830 
4 B - C      0.0220
5 C - A      0.431 
6 C - B      0.0220

Type plot(name_of_this_object) to visualize results.
> 
> # Fit by doubly-robust cross-fitting estimation with random forests
> # You can add standard errors with se = T
> estimate <- gapclosing(
+   data = simulated_data,
+   outcome_formula = outcome ~ category + confounder,
+   treatment_formula = treatment ~ category + confounder,
+   category_name = "category",
+   counterfactual_assignments = 1,
+   outcome_algorithm = "ranger",
+   treatment_algorithm = "ranger",
+   sample_split = "cross_fit"
+ )
> summary(estimate)
Gap-closing estimates using doubly_robust estimation with cross-fitting.

Treatment model was ranger estimation with model formula:
treatment ~ category + confounder

Outcome model was ranger estimation (estimated separately for each treatment condition) with model formula:
outcome ~ category + confounder

Factual estimates are means within and disparities across category.
Counterfactual estimates are under an intervention to set  to 1.

Factual mean outcomes:
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -1.07 
2 B          -0.144
3 C           0.761

Counterfactual mean outcomes (post-intervention means):
# A tibble: 3 × 2
  category estimate
  <chr>       <dbl>
1 A          -0.530
2 B          -0.484
3 C           0.566

Factual disparities:
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.927
2 A - C      -1.83 
3 B - A       0.927
4 B - C      -0.905
5 C - A       1.83 
6 C - B       0.905

Counterfactual disparities (gap-closing estimands):
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B     -0.0458
2 A - C     -1.10  
3 B - A      0.0458
4 B - C     -1.05  
5 C - A      1.10  
6 C - B      1.05  

Additive gap closed: Counterfactual - Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B      -0.881
2 A - C      -0.735
3 B - A       0.881
4 B - C       0.146
5 C - A       0.735
6 C - B      -0.146

Proportional gap closed: (Counterfactual - Factual) / Factual
# A tibble: 6 × 2
  category estimate
  <chr>       <dbl>
1 A - B       0.951
2 A - C       0.401
3 B - A       0.951
4 B - C      -0.161
5 C - A       0.401
6 C - B      -0.161

Type plot(name_of_this_object) to visualize results.
> 
> 
> 
> cleanEx()
> nameEx("pairwise_diff")
> ### * pairwise_diff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pairwise_diff
> ### Title: Pairwise difference calculator
> ### Aliases: pairwise_diff
> 
> ### ** Examples
> 
> sim_data <- data.frame(example_category = c("A","B","C"),
+                        estimate = c(1,2,3))
> pairwise_diff(sim_data, category_name = "example_category")
# A tibble: 6 × 2
  example_category estimate
  <chr>               <dbl>
1 A - B                  -1
2 A - C                  -2
3 B - A                   1
4 B - C                  -1
5 C - A                   2
6 C - B                   1
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.304 0.086 1.306 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
